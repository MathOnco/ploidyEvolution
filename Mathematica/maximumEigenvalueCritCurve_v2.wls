#!/usr/bin/env wolframscript
(* ::Package:: *)

(* ::Input:: *)
(*(*beta[i_, \[Eta]_] := \[Eta];*)
(*model="constant";*)
(*K=8;*)
(*\[Eta]=0.5;*)
(*\[Lambda]=1;*)
(*\[Mu]=0.375;*)
(*test=Table[If[i==j, \[Lambda](2(1-beta[j, \[Eta]])^i-1)-\[Mu],*)
(*		If[2j>=i>j,\[Lambda] Binomial[j,i-j]beta[j, \[Eta]]^(i-j) (1-beta[j, \[Eta]])^(2j-i),If[j>i,\[Lambda] Binomial[j,j-i]beta[j, \[Eta]]^(j-i) (1-beta[j, \[Eta]])^i,0]]],{i,K},{j,K}];*)
(*Export[NotebookDirectory[]<>"test_model" <>model<>".txt",test];*)*)
(**)


## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##;
## ## ## Heterogeneous MSRates or Death Rates ## ## ## ##;
## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##;


(* ::Input:: *)
(*params={"\[Mu]","\[Beta]"};*)
(**)
(*\[Theta]1=2;*)
(*Clear[\[Beta]]*)
(*beta[i_, \[Beta]_,MSmode_]:=If[MSmode=="constant",\[Beta], *)
(*				If[MSmode=="sigmoid",1/(\[Beta] + E^(Abs[i-3]^0.5)),*)
(*			          If[MSmode=="exp",E^(-\[Beta]*i),*)
(*				    0.25*((Sin[i*3.2-1.7]+\[Beta]*i)/6)^(\[Theta]1/i)]]];*)
(*\[Theta]2 =4;*)
(*Clear[\[Mu]]*)
(*mu[i_, \[Mu]_,K_,Deadmode_]:=If[Deadmode=="constant",\[Mu], *)
(*				If[Deadmode=="sin",1-((Sin[i*3.2+1.7]+Log[\[Mu]*i])/6)^(\[Theta]2/i),*)
(*				If[Deadmode=="sigmoid",1-1/(\[Mu] + E^(Abs[i-3]^0.5)),*)
(*			              Log[\[Mu]*i]^2/K^2]]];*)


(* ::Input:: *)
(*(*MSmodel 1*)*)
(*var="\[Beta]";*)
(*MSmode="constant"; *)
(*Deadmode="constant";*)
(*MSvars=Table[\[Beta],{\[Beta],0.001,1,0.05}];*)
(*Deadvars=Table[\[Beta],{\[Beta],0.001,1,0.05}];*)
(*(*var="\[Beta]";*)
(*model="linear";*)
(*vars=Table[\[Beta],{\[Beta],0.0001,0.12,0.005}];*)*)
(**)


(* ::Input:: *)
(*(*MSmodel 2*)*)
(*MSmode="sigmoid"; *)
(*Deadmode="constant";*)
(*var="\[Beta]";*)
(*MSvars=Table[\[Beta],{\[Beta],0.05,5,0.5}];*)
(*Deadvars=Table[\[Mu],{\[Mu],0.001,1,0.05}];*)


(* ::Input:: *)
(*(*MSmodel 3*)*)
(*MSmode="sin";*)
(*Deadmode="constant";*)
(*var="\[Beta]";*)
(*MSvars=Table[\[Beta],{\[Beta],0.6,2,0.1}];*)
(*Deadvars=Table[\[Mu],{\[Mu],0.001,1,0.05}];*)
(**)


(* ::Input:: *)
(*(*MSmodel 4*)*)
(*MSmode="exp";*)
(*Deadmode="constant";*)
(*var="\[Beta]";*)
(*MSvars=Table[\[Beta],{\[Beta],0.01,1,0.05}];*)
(*Deadvars=Table[\[Mu],{\[Mu],0.001,1,0.05}];*)


(* ::Input:: *)
(*(*Death model 1*)*)
(*var="\[Mu]";*)
(*Deadmode="sigmoid";*)
(*MSmode="constant";*)
(*Deadvars=Table[\[Mu],{\[Mu],0.05,5,0.5}];*)
(*MSvars=Table[\[Beta],{\[Beta],0.001,1,0.05}];*)


(* ::Input:: *)
(*(*Death model 2*)*)
(*var="\[Mu]";*)
(*Deadmode="sin";*)
(*MSmode="constant";*)
(*Deadvars=Table[\[Mu],{\[Mu],1,20,1}];*)
(*MSvars=Table[\[Beta],{\[Beta],0.001,1,0.05}];*)
(**)


(* ::Input:: *)
(*(*Death model 3*)*)
(*var="\[Mu]";*)
(*Deadmode="poly";*)
(*MSmode="constant";*)
(*Deadvars=Log[Table[\[Mu],{\[Mu],1.0001,1.1,0.01}]];*)
(*MSvars=Table[\[Beta],{\[Beta],0.001,1,0.05}];*)
(**)


(* ::Input:: *)
(*(*plot functions*)*)
(*xy=Table[{i,beta[i,#,MSmode]},{i,1,8,0.05}]&/@MSvars;*)
(*betaplot=ListPlot[#&/@xy,*)
(*Joined->True,*)
(*Frame->True,*)
(*Axes->False,*)
(*PlotRange->{All,All},*)
(*FrameLabel->{"ploidy","Mis-segregation rate ("<>Capitalize["\[Beta]"]<>")"},*)
(*FrameStyle->Directive[Thickness[0.0035],Black],*)
(*PlotStyle->ColorData[10,"ColorList"],*)
(*LabelStyle->{FontSize->18,Black,FontFamily->"Arial"},*)
(*PlotLegends->MSvars,*)
(*ImageSize->500,*)
(*AspectRatio->1,Epilog->Text[Style[beta[i,\[Beta],MSmode],FontSize->16],{5.5,0.4}]*)
(*];*)
(*If[Deadmode=="constant",Export[NotebookDirectory[]<>"betaplot_"<>MSmode<>"_"<>var<>".jpg",betaplot]];*)
(*betaplot*)
(**)
(*xy=Table[{i,mu[i,#,10,Deadmode]},{i,1,8,0.05}]&/@Deadvars;*)
(*muplot=ListPlot[#&/@xy,*)
(*Joined->True,*)
(*Frame->True,*)
(*Axes->False,*)
(*PlotRange->{All,All},*)
(*FrameLabel->{"ploidy","Death rate ("<>Capitalize["\[Mu]"]<>")"},*)
(*FrameStyle->Directive[Thickness[0.0035],Black],*)
(*PlotStyle->ColorData[10,"ColorList"],*)
(*LabelStyle->{FontSize->18,Black,FontFamily->"Arial"},*)
(*PlotLegends->Deadvars,*)
(*ImageSize->500,*)
(*AspectRatio->1,Epilog->Text[Style[mu[i, \[Mu], K,Deadmode],FontSize->22],{4.95,0.3}]*)
(*];*)
(*If[MSmode=="constant",Export[NotebookDirectory[]<>"muplot_"<>Deadmode<>"_"<>var<>".jpg",muplot]];*)
(*muplot*)


(* ::Input:: *)
(**)


(* ::Input:: *)
(*myfun[\[Lambda]_,\[Mu]_?NumberQ,K_?NumberQ, \[Beta]_ ?NumberQ]:=Eigenvalues[ *)
(*	Table[If[i==j, \[Lambda](2(1-beta[j, \[Beta], MSmode])^i-1)-mu[j, \[Mu],K,Deadmode],*)
(*	     If[2j>=i>j,\[Lambda] Binomial[j,i-j]beta[j, \[Beta], MSmode]^(i-j) (1-beta[j, \[Beta], MSmode])^(2j-i),*)
(*	      If[j>i,\[Lambda] Binomial[j,j-i]beta[j, \[Beta], MSmode]^(j-i) (1-beta[j, \[Beta], MSmode])^i,0]]],{i,K},{j,K}],*)
(*1,Method->{"Arnoldi","Criteria"->"RealPart"}][[1]]*)
(**)
(*Kvals={8};*)
(*ploidies={2};*)
(*leg="K = "<>ToString[#]&/@Kvals;*)
(*leg2="p = "<>ToString[#]&/@ploidies;*)
(*colorList=ColorData[37,"ColorList"];*)
(*(*critTable=Table[{\[Mu],beta[2,critMu[\[Mu],#]]},{\[Mu],0.0001,1,0.1}]&/@Kvals;*)*)
(*(*critTable4=Table[{\[Mu],beta[#,critMu[\[Mu],8]]},{\[Mu],0.0,1,0.1}]&/@ploidies;*)*)


(* ::Input:: *)
(*(*vary Death*)*)
(*critBeta[\[Beta]_?NumberQ, K_?NumberQ]:=If[Deadmode=="sin",*)
(*			\[Mu]/.FindRoot[myfun[1,\[Mu],K,\[Beta]]==0,{\[Mu],1,0.125,300}],*)
(*				If[Deadmode=="poly",*)
(*						\[Mu]/.FindRoot[myfun[1,\[Mu],K,\[Beta]]==0,{\[Mu],0.9,0.3,3501.5}]]];*)
(**)


(* ::Input:: *)
(*(*vary MS*)*)
(*critMu[\[Mu]_?NumberQ, K_?NumberQ]:=If[MSmode=="constant",								\[Beta]/.FindRoot[myfun[1,\[Mu],K,\[Beta]]==0,{\[Beta],0.01,0.0000000001,1}],*)
(*				If[MSmode=="sigmoid",*)
(*\[Beta]/.FindRoot[myfun[1,\[Mu],K,\[Beta]]==0,{\[Beta],0.9999,0.000005,5}],*)
(*				If[MSmode=="sin", 								\[Beta]/.FindRoot[myfun[1,\[Mu],K,\[Beta]]==0,{\[Beta],0.6,0.2,100}],*)
(*			If[MSmode=="exp",\[Beta]/.FindRoot[myfun[1,\[Mu],K,\[Beta]]==0,{\[Beta],0.6,0.01,1}]]]]];*)
(*										*)


(* ::Input:: *)
(*If[MSmode=="constant",critTablevar=Table[{\[Beta],critBeta[\[Beta],#]},{\[Beta],0.1,0.95,0.01}]&/@Kvals];*)
(*If[Deadmode=="constant",critTablevar=Table[{\[Mu],critMu[\[Mu],#]},{\[Mu],0.1,0.9,0.1}]&/@Kvals];*)


(* ::Input:: *)
(*(*Plot*)*)
(*critCurve=ListPlot[#&/@critTablevar,*)
(*Joined->True,*)
(*Frame->True,*)
(*Axes->False,*)
(*PlotRange->{All,All},*)
(*(*Epilog\[Rule]points,*)*)
(*PlotStyle->{{Black},{Red}, {Purple}},*)
(*FrameLabel->{Complement[params,{var}][[1]],var},*)
(*FrameStyle->Directive[Thickness[0.0035],Black],*)
(*LabelStyle->{FontSize->18,Black,FontFamily->"Arial"},*)
(*PlotLegends->leg,*)
(*ImageSize->300,AspectRatio->1*)
(*]*)
(*Export[NotebookDirectory[]<>"critcurve_MS" <>MSmode<>"Death"<>Deadmode<>"_var"<>var<>".jpg",critCurve];*)


(* ::Input:: *)
(*(*Export[NotebookDirectory[]<>"criticalcurve_newBetafunc_betaconstant_4Ks.csv",critTable[[#]],"CSV"]&/@Range[1]*)*)
(*If[Deadmode=="constant",Export[NotebookDirectory[]<>"beta_criticalcurve_" <>MSmode<>"_"<>var<>"_K="<>ToString[Kvals[[#]]]<>".csv",critTablevar[[#]],"CSV","TableHeadings"->{\[Mu],\[Beta]}]&/@Range[Length[Kvals]]];*)
(*If[Deadmode=="constant",Export[NotebookDirectory[]<>"betafunction" <>MSmode<>"_"<>var<>".txt",{beta[i,\[Beta],MSmode]}]];*)
(*If[MSmode=="constant",Export[NotebookDirectory[]<>"mu_criticalcurve_"<>Deadmode<>"_"<>var<>"_K="<>ToString[Kvals[[#]]]<>".csv",critTablevar[[#]],"CSV","TableHeadings"->{\[Beta],\[Mu]}]&/@Range[Length[Kvals]]];If[MSmode=="constant",Export[NotebookDirectory[]<>"mufunction"<>Deadmode<>"_"<>var<>".txt",{mu[i, \[Mu],K,Deadmode]}]];*)
